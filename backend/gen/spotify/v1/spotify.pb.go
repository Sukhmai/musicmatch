// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: spotify/v1/spotify.proto

package spotifyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveTopArtistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Number      string `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *SaveTopArtistsRequest) Reset() {
	*x = SaveTopArtistsRequest{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTopArtistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTopArtistsRequest) ProtoMessage() {}

func (x *SaveTopArtistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTopArtistsRequest.ProtoReflect.Descriptor instead.
func (*SaveTopArtistsRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{0}
}

func (x *SaveTopArtistsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *SaveTopArtistsRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SaveTopArtistsRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *SaveTopArtistsRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveTopArtistsRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type ArtistImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width  int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *ArtistImage) Reset() {
	*x = ArtistImage{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistImage) ProtoMessage() {}

func (x *ArtistImage) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistImage.ProtoReflect.Descriptor instead.
func (*ArtistImage) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{1}
}

func (x *ArtistImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ArtistImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ArtistImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type ArtistInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Images     []*ArtistImage `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	Genres     []string       `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"`
	Popularity int32          `protobuf:"varint,5,opt,name=popularity,proto3" json:"popularity,omitempty"`
	SpotifyUrl string         `protobuf:"bytes,6,opt,name=spotify_url,json=spotifyUrl,proto3" json:"spotify_url,omitempty"`
}

func (x *ArtistInfo) Reset() {
	*x = ArtistInfo{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistInfo) ProtoMessage() {}

func (x *ArtistInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistInfo.ProtoReflect.Descriptor instead.
func (*ArtistInfo) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{2}
}

func (x *ArtistInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArtistInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtistInfo) GetImages() []*ArtistImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ArtistInfo) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *ArtistInfo) GetPopularity() int32 {
	if x != nil {
		return x.Popularity
	}
	return 0
}

func (x *ArtistInfo) GetSpotifyUrl() string {
	if x != nil {
		return x.SpotifyUrl
	}
	return ""
}

type SaveTopArtistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UniqueArtists []*ArtistInfo `protobuf:"bytes,2,rep,name=unique_artists,json=uniqueArtists,proto3" json:"unique_artists,omitempty"`
}

func (x *SaveTopArtistsResponse) Reset() {
	*x = SaveTopArtistsResponse{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTopArtistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTopArtistsResponse) ProtoMessage() {}

func (x *SaveTopArtistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTopArtistsResponse.ProtoReflect.Descriptor instead.
func (*SaveTopArtistsResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{3}
}

func (x *SaveTopArtistsResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SaveTopArtistsResponse) GetUniqueArtists() []*ArtistInfo {
	if x != nil {
		return x.UniqueArtists
	}
	return nil
}

type GetAuthURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAuthURLRequest) Reset() {
	*x = GetAuthURLRequest{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthURLRequest) ProtoMessage() {}

func (x *GetAuthURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthURLRequest.ProtoReflect.Descriptor instead.
func (*GetAuthURLRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{4}
}

type GetAuthURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetAuthURLResponse) Reset() {
	*x = GetAuthURLResponse{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthURLResponse) ProtoMessage() {}

func (x *GetAuthURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthURLResponse.ProtoReflect.Descriptor instead.
func (*GetAuthURLResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{5}
}

func (x *GetAuthURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetUserCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserCountRequest) Reset() {
	*x = GetUserCountRequest{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCountRequest) ProtoMessage() {}

func (x *GetUserCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCountRequest.ProtoReflect.Descriptor instead.
func (*GetUserCountRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{6}
}

type GetUserCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	MaxUsers int32 `protobuf:"varint,2,opt,name=max_users,json=maxUsers,proto3" json:"max_users,omitempty"`
}

func (x *GetUserCountResponse) Reset() {
	*x = GetUserCountResponse{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCountResponse) ProtoMessage() {}

func (x *GetUserCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCountResponse.ProtoReflect.Descriptor instead.
func (*GetUserCountResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetUserCountResponse) GetMaxUsers() int32 {
	if x != nil {
		return x.MaxUsers
	}
	return 0
}

type ExchangeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ExchangeTokenRequest) Reset() {
	*x = ExchangeTokenRequest{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeTokenRequest) ProtoMessage() {}

func (x *ExchangeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeTokenRequest.ProtoReflect.Descriptor instead.
func (*ExchangeTokenRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{8}
}

func (x *ExchangeTokenRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExchangeTokenRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ExchangeTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType    string `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn    int32  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *ExchangeTokenResponse) Reset() {
	*x = ExchangeTokenResponse{}
	mi := &file_spotify_v1_spotify_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeTokenResponse) ProtoMessage() {}

func (x *ExchangeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeTokenResponse.ProtoReflect.Descriptor instead.
func (*ExchangeTokenResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{9}
}

func (x *ExchangeTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ExchangeTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *ExchangeTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ExchangeTokenResponse) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *ExchangeTokenResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

var File_spotify_v1_spotify_proto protoreflect.FileDescriptor

var file_spotify_v1_spotify_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x54,
	0x6f, 0x70, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4d, 0x0a,
	0x0b, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0xba, 0x01, 0x0a,
	0x0a, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x22, 0x70, 0x0a, 0x16, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x6f, 0x70, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x49, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb3, 0x01, 0x0a,
	0x15, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x32, 0xdf, 0x02, 0x0a, 0x0e, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x70,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x70, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x55, 0x52, 0x4c, 0x12, 0x1d, 0x2e, 0x73,
	0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x73,
	0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa2, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x6b, 0x68, 0x6d, 0x61, 0x69, 0x2f, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x53, 0x70, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x16, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x53, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_spotify_v1_spotify_proto_rawDescOnce sync.Once
	file_spotify_v1_spotify_proto_rawDescData = file_spotify_v1_spotify_proto_rawDesc
)

func file_spotify_v1_spotify_proto_rawDescGZIP() []byte {
	file_spotify_v1_spotify_proto_rawDescOnce.Do(func() {
		file_spotify_v1_spotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_spotify_v1_spotify_proto_rawDescData)
	})
	return file_spotify_v1_spotify_proto_rawDescData
}

var file_spotify_v1_spotify_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spotify_v1_spotify_proto_goTypes = []any{
	(*SaveTopArtistsRequest)(nil),  // 0: spotify.v1.SaveTopArtistsRequest
	(*ArtistImage)(nil),            // 1: spotify.v1.ArtistImage
	(*ArtistInfo)(nil),             // 2: spotify.v1.ArtistInfo
	(*SaveTopArtistsResponse)(nil), // 3: spotify.v1.SaveTopArtistsResponse
	(*GetAuthURLRequest)(nil),      // 4: spotify.v1.GetAuthURLRequest
	(*GetAuthURLResponse)(nil),     // 5: spotify.v1.GetAuthURLResponse
	(*GetUserCountRequest)(nil),    // 6: spotify.v1.GetUserCountRequest
	(*GetUserCountResponse)(nil),   // 7: spotify.v1.GetUserCountResponse
	(*ExchangeTokenRequest)(nil),   // 8: spotify.v1.ExchangeTokenRequest
	(*ExchangeTokenResponse)(nil),  // 9: spotify.v1.ExchangeTokenResponse
}
var file_spotify_v1_spotify_proto_depIdxs = []int32{
	1, // 0: spotify.v1.ArtistInfo.images:type_name -> spotify.v1.ArtistImage
	2, // 1: spotify.v1.SaveTopArtistsResponse.unique_artists:type_name -> spotify.v1.ArtistInfo
	0, // 2: spotify.v1.SpotifyService.SaveTopArtists:input_type -> spotify.v1.SaveTopArtistsRequest
	4, // 3: spotify.v1.SpotifyService.GetAuthURL:input_type -> spotify.v1.GetAuthURLRequest
	8, // 4: spotify.v1.SpotifyService.ExchangeToken:input_type -> spotify.v1.ExchangeTokenRequest
	6, // 5: spotify.v1.SpotifyService.GetUserCount:input_type -> spotify.v1.GetUserCountRequest
	3, // 6: spotify.v1.SpotifyService.SaveTopArtists:output_type -> spotify.v1.SaveTopArtistsResponse
	5, // 7: spotify.v1.SpotifyService.GetAuthURL:output_type -> spotify.v1.GetAuthURLResponse
	9, // 8: spotify.v1.SpotifyService.ExchangeToken:output_type -> spotify.v1.ExchangeTokenResponse
	7, // 9: spotify.v1.SpotifyService.GetUserCount:output_type -> spotify.v1.GetUserCountResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spotify_v1_spotify_proto_init() }
func file_spotify_v1_spotify_proto_init() {
	if File_spotify_v1_spotify_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spotify_v1_spotify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spotify_v1_spotify_proto_goTypes,
		DependencyIndexes: file_spotify_v1_spotify_proto_depIdxs,
		MessageInfos:      file_spotify_v1_spotify_proto_msgTypes,
	}.Build()
	File_spotify_v1_spotify_proto = out.File
	file_spotify_v1_spotify_proto_rawDesc = nil
	file_spotify_v1_spotify_proto_goTypes = nil
	file_spotify_v1_spotify_proto_depIdxs = nil
}
